image: itisfoundation/gitlab-runner-docker:stable
variables:
  # docker in docker variant, see https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  # have some prefix so it may help for garbage collecting in the registry
  SC_CI_PROJECT_PATH_NAME: ci/$CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG
  SC_CI_TEST_IMAGE_PREFIX: $SC_CI_TESTING_REGISTRY/ci/$CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG
  SC_CI_OSPARC_PYTHON_LOCATION: models/osparc-python
services:
   - docker:dind
before_script:
  - docker info
# --------------------------------------------------------------------------------------------
# ------- osparc-python
# --------------------------------------------------------------------------------------------
osparc-python-build:
  stage: build
  except:
    - staging
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - cd $SC_CI_OSPARC_PYTHON_LOCATION
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make pull-latest || true
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make build
    - make push-force
  only:
    changes:
      - "**/osparc-python/**/*"
  environment:
    name: $CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG/osparc-python
    on_stop: remove_osparc-python_builds

remove_osparc-python_builds:
  stage: build
  script:
    - export DOCKER_REGISTRY=$SC_CI_TESTING_REGISTRY
    - export DOCKER_PROJECT=$SC_CI_PROJECT_PATH_NAME/simcore/services/comp/osparc-python
    - export API_USER=$SC_CI_TESTING_REGISTRY_USER
    - export API_TOKEN=$SC_CI_TESTING_REGISTRY_PORTUS_TOKEN
    - bash $SC_CI_OSPARC_PYTHON_LOCATION/CI/delete-image-from-registry-portus.bash # this will fail if registry is not available through Portus
  when: manual
  environment:
    name: $CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG/osparc-python
    action: stop

osparc-python-unit-test:
  stage: test
  except:
    - staging
  script:
    - pip install -r $SC_CI_OSPARC_PYTHON_LOCATION/tests/requirements.txt
    - cd $SC_CI_OSPARC_PYTHON_LOCATION
    - make tests-unit
  only:
    changes:
      - "**/osparc-python/**/*"
  artifacts:
    reports:
      junit:
        - $SC_CI_OSPARC_PYTHON_LOCATION/pytest_unittest.xml
    paths:
      - $SC_CI_OSPARC_PYTHON_LOCATION/pytest_unittest.xml

osparc-python-integration-test:
  stage: test
  except:
    - staging
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - pip install -r $SC_CI_OSPARC_PYTHON_LOCATION/tests/requirements.txt
    - cd $SC_CI_OSPARC_PYTHON_LOCATION
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make pull-latest
    - make tests-integration
  only:
    changes:
      - "**/osparc-python/**/*"
  artifacts:
    reports:
      junit:
        - $SC_CI_OSPARC_PYTHON_LOCATION/pytest_integrationtest.xml
    paths:
      - $SC_CI_OSPARC_PYTHON_LOCATION/pytest_integrationtest.xml

osparc-python-master:
  stage: deploy
  only:
    - master
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - cd $SC_CI_OSPARC_PYTHON_LOCATION
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make pull-latest
    - docker tag $SC_CI_TEST_IMAGE_PREFIX/simcore/services/comp/osparc-python $SC_CI_MASTER_REGISTRY/simcore/services/comp/osparc-python
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make push
  environment:
    name: osparc-python-master
    url: $SC_CI_MASTER_REGISTRY

osparc-python-staging:
  stage: deploy
  only:
    - staging
  script:
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - echo "$SC_CI_STAGING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_STAGING_REGISTRY_USER" --password-stdin $SC_CI_STAGING_REGISTRY
    - cd $SC_CI_OSPARC_PYTHON_LOCATION
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make pull-latest
    - docker tag $SC_CI_MASTER_REGISTRY/simcore/services/comp/osparc-python $SC_CI_STAGING_REGISTRY/simcore/services/comp/osparc-python
    - export DOCKER_REGISTRY=$SC_CI_STAGING_REGISTRY
    - make push
  environment:
    name: osparc-python-production
    url: $SC_CI_STAGING_REGISTRY
